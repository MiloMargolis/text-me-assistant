AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Globals:
  Function:
    Timeout: 15
    MemorySize: 256
    Runtime: nodejs18.x

Parameters:
  OpenAiApiKey:
    Type: String
    NoEcho: true
    Description: OpenAI API Key
  TwilioAccountSid:
    Type: String
    NoEcho: true
    Description: Twilio Account SID
  TwilioAuthToken:
    Type: String
    NoEcho: true
    Description: Twilio Auth Token
  TwilioPhoneNumber:
    Type: String
    Description: Twilio Phone Number
  ManagerPhoneNumber:
    Type: String
    Description: Manager's Phone Number for Escalations

Resources:
  # Application IAM Roles
  ApplicationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-application-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - lambda.amazonaws.com
                - sagemaker.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
      Policies:
        - PolicyName: ApplicationAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sagemaker:InvokeEndpoint
                  - sagemaker:CreateEndpoint
                  - sagemaker:CreateEndpointConfig
                  - sagemaker:CreateModel
                Resource: '*'
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${AWS::StackName}-*

  # SageMaker Model
  MessageClassifierModel:
    Type: AWS::SageMaker::Model
    Properties:
      ExecutionRoleArn: !GetAtt ApplicationRole.Arn
      PrimaryContainer:
        Image: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/blazingtext:latest'
        Mode: SingleModel
        Environment:
          SAGEMAKER_PROGRAM: 'blazingtext'
          SAGEMAKER_SUBMIT_DIRECTORY: '/opt/ml/model'
          SAGEMAKER_CONTAINER_LOG_LEVEL: '20'
          SAGEMAKER_REGION: !Ref AWS::Region

  # SageMaker Endpoint Configuration
  MessageClassifierEndpointConfig:
    Type: AWS::SageMaker::EndpointConfig
    Properties:
      ProductionVariants:
        - InitialInstanceCount: 1
          InstanceType: ml.t2.medium
          ModelName: !Ref MessageClassifierModel
          VariantName: AllTraffic

  # SageMaker Endpoint
  MessageClassifierEndpoint:
    Type: AWS::SageMaker::Endpoint
    Properties:
      EndpointConfigName: !Ref MessageClassifierEndpointConfig
      EndpointName: !Sub '${AWS::StackName}-message-classifier'

  MessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/functions/message/
      Handler: index.handler
      Role: !GetAtt ApplicationRole.Arn
      Environment:
        Variables:
          OPENAI_API_KEY: !Ref OpenAiApiKey
          TWILIO_ACCOUNT_SID: !Ref TwilioAccountSid
          TWILIO_AUTH_TOKEN: !Ref TwilioAuthToken
          TWILIO_PHONE_NUMBER: !Ref TwilioPhoneNumber
          SAGEMAKER_ENDPOINT_NAME: !Ref MessageClassifierEndpoint
      Events:
        MessageEvent:
          Type: Api
          Properties:
            Path: /message
            Method: post

  EscalateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/functions/escalate/
      Handler: index.handler
      Role: !GetAtt ApplicationRole.Arn
      Environment:
        Variables:
          TWILIO_ACCOUNT_SID: !Ref TwilioAccountSid
          TWILIO_AUTH_TOKEN: !Ref TwilioAuthToken
          TWILIO_PHONE_NUMBER: !Ref TwilioPhoneNumber
          MANAGER_PHONE_NUMBER: !Ref ManagerPhoneNumber
      Events:
        EscalateEvent:
          Type: Api
          Properties:
            Path: /escalate
            Method: post

Outputs:
  ApplicationRoleArn:
    Description: "ARN of the application IAM role"
    Value: !GetAtt ApplicationRole.Arn
  MessageClassifierEndpoint:
    Description: "SageMaker Endpoint for Message Classification"
    Value: !GetAtt MessageClassifierEndpoint.EndpointName
  ApiEndpoint:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"